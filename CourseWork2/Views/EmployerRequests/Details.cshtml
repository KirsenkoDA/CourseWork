@model CourseWork2.Models.EmployerRequest
@using Microsoft.AspNetCore.Identity
@{
    ViewData["Title"] = "Детально";
}
@inject UserManager<IdentityUser> UserManager
@{
    var currentUser = await UserManager.GetUserAsync(User);
    var currentUserId = currentUser.Id;
    int filteredValue;
}
    @if (ViewData["filteredValues"] == null)
    {
        filteredValue = 0;
    }
    else
    {
        filteredValue = 1;
    }

<div>
    <h1>@Html.DisplayFor(model => model.Post)</h1>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.User.UserName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Post)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Post)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Info)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Info)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Education)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Education.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Salary)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Salary)
        </dd>
    </dl>
</div>
<div>
    @if (Model.User.Id == currentUserId)
    {
        @foreach (var responds in Model.Responds)
        {
            var accountId = responds.User.Id;
            <a asp-controller="Accounts" asp-action="AccountPreview" asp-route-id="@accountId">@responds.User.UserName</a>
            <br />
        }
    }
</div>
<div>
    @if (User.IsInRole("MODERATOR"))
    {
        <button style="background-color: green"><a asp-action="Publish" asp-route-id="@Model?.Id">Опубликовать</a></button>
        <button style="background-color: red"><a asp-action="Delete" asp-route-id="@Model.Id">Удалить</a></button>
    }
    @* Если вакансия принадлежат пользователю, то он может их изменять и удалять*@
    @if (Model.User.Id != currentUserId)
    {
        if (Model.Responds.FirstOrDefault(e => e.User.Id == currentUserId) == null)
        {
            @*Если пользователь откликнулся, то он уже откликатьс не может*@
            <a class="text-white" asp-action="Respond" asp-route-id="@Model.Id"><button type="button" class="btn btn-success">Откликнуться</button></a>
        }
    }
    @if (Model.User.Id == currentUserId)
    {
        <a asp-action="Delete" asp-route-id="@Model.Id">Удалить</a>

        <a asp-action = "Edit" asp-route-id = "@Model?.Id">Изменить</a>
    }
</div>
